# c
toolchain("c") {
  tool("cc") {
    if (getenv("CC") != "") {
      cc = getenv("CC")
    } else {
      if (current_os == "freebsd") {
        cc = "clang"
      } else if (current_os == "linux") {
        cc = "gcc"
      }
    }

    depfile = "{{output}}.d"
    command = "${cc} -fdiagnostics-color=always -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CC {{output}}"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o",
    ]
  }

  tool("cxx") {
    if (getenv("CXX") != "") {
      cxx = getenv("CXX")
    } else {
      if (current_os == "freebsd") {
        cxx = "clang++"
      } else if (current_os == "linux") {
        cxx = "gcc++"
      }
    }

    depfile = "{{output}}.d"
    command = "${cxx} -fdiagnostics-color=always -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CXX {{output}}"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o",
    ]
  }

  tool("alink") {
    if (getenv("AR") != "") {
      alink = getenv("AR")
    } else {
      alink = "ar"
    }

    rspfile = "{{output}}.rsp"
    command = "rm -f {{output}} && ${alink} rcs {{output}} @$rspfile"
    description = "AR {{target_output_name}}{{output_extension}}"
    rspfile_content = "{{inputs}}"
    outputs = [
      "{{target_out_dir}}/{{target_output_name}}{{output_extension}}",
    ]
    default_output_extension = ".a"
    output_prefix = "lib"
  }

  tool("solink") {
    if (getenv("CC") != "") {
      solink = getenv("CC")
    } else {
      if (current_os == "freebsd") {
        solink = "clang"
      } else if (current_os == "linux") {
        solink = "gcc"
      }
    }

    soname = "{{target_output_name}}{{output_extension}}"  # e.g. "libfoo.so".
    sofile = "{{output_dir}}/$soname"
    rspfile = soname + ".rsp"

    command = "${solink} -fdiagnostics-color=always -shared {{ldflags}} -o $sofile -Wl,-soname=$soname @$rspfile"
    rspfile_content = "-Wl,--whole-archive {{inputs}} {{solibs}} -Wl,--no-whole-archive {{libs}}"

    description = "SOLINK $soname"

    # Use this for {{output_extension}} expansions unless a target manually
    # overrides it (in which case {{output_extension}} will be what the target
    # specifies).
    default_output_extension = ".so"

    # Use this for {{output_dir}} expansions unless a target manually overrides
    # it (in which case {{output_dir}} will be what the target specifies).
    default_output_dir = "{{root_out_dir}}"

    outputs = [
      sofile,
    ]
    link_output = sofile
    depend_output = sofile
    output_prefix = "lib"
  }

  tool("link") {
    if (getenv("CC") != "") {
      link = getenv("CC")
    } else {
      if (current_os == "freebsd") {
        link = "clang"
      } else if (current_os == "linux") {
        link = "gcc"
      }
    }

    outfile = "{{target_output_name}}{{output_extension}}"
    rspfile = "$outfile.rsp"
    command = "${link} -fdiagnostics-color=always {{ldflags}} -o $outfile -Wl,--start-group @$rspfile {{solibs}} -Wl,--end-group {{libs}}"
    description = "LINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    rspfile_content = "{{inputs}}"
    outputs = [
      outfile,
    ]
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "STAMP {{output}}"
  }

  tool("copy") {
    command = "cp -af {{source}} {{output}}"
    description = "COPY {{source}} {{output}}"
  }
}

# c++
toolchain("cxx") {
  tool("cc") {
    if (getenv("CC") != "") {
      cc = getenv("CC")
    } else {
      if (current_os == "freebsd") {
        cc = "clang"
      } else if (current_os == "linux") {
        cc = "gcc"
      }
    }

    depfile = "{{output}}.d"
    command = "${cc} -fdiagnostics-color=always -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CC {{output}}"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o",
    ]
  }

  tool("cxx") {
    if (getenv("CXX") != "") {
      cxx = getenv("CXX")
    } else {
      if (current_os == "freebsd") {
        cxx = "clang++"
      } else if (current_os == "linux") {
        cxx = "gcc++"
      }
    }

    depfile = "{{output}}.d"
    command = "${cxx} -fdiagnostics-color=always -MMD -MF $depfile {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
    depsformat = "gcc"
    description = "CXX {{output}}"
    outputs = [
      "{{source_out_dir}}/{{target_output_name}}.{{source_name_part}}.o",
    ]
  }

  tool("alink") {
    if (getenv("AR") != "") {
      alink = getenv("AR")
    } else {
      alink = "ar"
    }

    rspfile = "{{output}}.rsp"
    command = "rm -f {{output}} && ${alink} rcs {{output}} @$rspfile"
    description = "AR {{target_output_name}}{{output_extension}}"
    rspfile_content = "{{inputs}}"
    outputs = [
      "{{target_out_dir}}/{{target_output_name}}{{output_extension}}",
    ]
    default_output_extension = ".a"
    output_prefix = "lib"
  }

  tool("solink") {
    if (getenv("CXX") != "") {
      solink = getenv("CXX")
    } else {
      if (current_os == "freebsd") {
        solink = "clang++"
      } else if (current_os == "linux") {
        solink = "gcc++"
      }
    }

    soname = "{{target_output_name}}{{output_extension}}"  # e.g. "libfoo.so".
    sofile = "{{output_dir}}/$soname"
    rspfile = soname + ".rsp"

    command = "${solink} -fdiagnostics-color=always -shared {{ldflags}} -o $sofile -Wl,-soname=$soname @$rspfile"
    rspfile_content = "-Wl,--whole-archive {{inputs}} {{solibs}} -Wl,--no-whole-archive {{libs}}"

    description = "SOLINK $soname"

    # Use this for {{output_extension}} expansions unless a target manually
    # overrides it (in which case {{output_extension}} will be what the target
    # specifies).
    default_output_extension = ".so"

    # Use this for {{output_dir}} expansions unless a target manually overrides
    # it (in which case {{output_dir}} will be what the target specifies).
    default_output_dir = "{{root_out_dir}}"

    outputs = [
      sofile,
    ]
    link_output = sofile
    depend_output = sofile
    output_prefix = "lib"
  }

  tool("link") {
    if (getenv("CXX") != "") {
      link = getenv("CXX")
    } else {
      if (current_os == "freebsd") {
        link = "clang++"
      } else if (current_os == "linux") {
        link = "gcc++"
      }
    }

    outfile = "{{target_output_name}}{{output_extension}}"
    rspfile = "$outfile.rsp"
    command = "${link} -fdiagnostics-color=always {{ldflags}} -o $outfile -Wl,--start-group @$rspfile {{solibs}} -Wl,--end-group {{libs}}"
    description = "LINK $outfile"
    default_output_dir = "{{root_out_dir}}"
    rspfile_content = "{{inputs}}"
    outputs = [
      outfile,
    ]
  }

  tool("stamp") {
    command = "touch {{output}}"
    description = "STAMP {{output}}"
  }

  tool("copy") {
    command = "cp -af {{source}} {{output}}"
    description = "COPY {{source}} {{output}}"
  }
}
